// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialMediaManagement.Data;

namespace SocialMediaManagement.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SocialMediaManagement.Models.Group", b =>
                {
                    b.Property<int>("GroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupID");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("SocialMediaManagement.Models.GroupIActionRelation", b =>
                {
                    b.Property<int>("GroupIActionRelationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GroupID")
                        .HasColumnType("int");

                    b.Property<int>("ItemActionID")
                        .HasColumnType("int");

                    b.HasKey("GroupIActionRelationID");

                    b.HasIndex("GroupID");

                    b.HasIndex("ItemActionID");

                    b.ToTable("GroupIActionRelations");
                });

            modelBuilder.Entity("SocialMediaManagement.Models.GroupItemRelation", b =>
                {
                    b.Property<int>("GroupMenuItemRelationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GroupID")
                        .HasColumnType("int");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.HasKey("GroupMenuItemRelationId");

                    b.HasIndex("GroupID");

                    b.HasIndex("ItemID");

                    b.ToTable("GroupItemRelations");
                });

            modelBuilder.Entity("SocialMediaManagement.Models.MenuItem", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Visible")
                        .HasColumnType("int");

                    b.HasKey("ItemID");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("SocialMediaManagement.Models.MenuItemAction", b =>
                {
                    b.Property<int>("ItemActionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ItemActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MenuItemItemID")
                        .HasColumnType("int");

                    b.HasKey("ItemActionID");

                    b.HasIndex("MenuItemItemID");

                    b.ToTable("MenuItemActions");
                });

            modelBuilder.Entity("SocialMediaManagement.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupID")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("GroupID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SocialMediaManagement.Models.GroupIActionRelation", b =>
                {
                    b.HasOne("SocialMediaManagement.Models.Group", "Group")
                        .WithMany("GroupIActionRelations")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SocialMediaManagement.Models.MenuItemAction", "MenuItemAction")
                        .WithMany("GroupIActionRelations")
                        .HasForeignKey("ItemActionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("MenuItemAction");
                });

            modelBuilder.Entity("SocialMediaManagement.Models.GroupItemRelation", b =>
                {
                    b.HasOne("SocialMediaManagement.Models.Group", "Group")
                        .WithMany("GroupItemRelations")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SocialMediaManagement.Models.MenuItem", "MenuItem")
                        .WithMany("GroupItemRelations")
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("SocialMediaManagement.Models.MenuItemAction", b =>
                {
                    b.HasOne("SocialMediaManagement.Models.MenuItem", "MenuItem")
                        .WithMany("MenuItemActions")
                        .HasForeignKey("MenuItemItemID");

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("SocialMediaManagement.Models.User", b =>
                {
                    b.HasOne("SocialMediaManagement.Models.Group", "Group")
                        .WithMany("Users")
                        .HasForeignKey("GroupID");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("SocialMediaManagement.Models.Group", b =>
                {
                    b.Navigation("GroupIActionRelations");

                    b.Navigation("GroupItemRelations");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("SocialMediaManagement.Models.MenuItem", b =>
                {
                    b.Navigation("GroupItemRelations");

                    b.Navigation("MenuItemActions");
                });

            modelBuilder.Entity("SocialMediaManagement.Models.MenuItemAction", b =>
                {
                    b.Navigation("GroupIActionRelations");
                });
#pragma warning restore 612, 618
        }
    }
}
